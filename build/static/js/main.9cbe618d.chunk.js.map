{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/dbCommunication.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","name","number","onClick","id","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","className","message","Filter","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewNumber","setNewName","filterString","setStringFilter","setNotification","useEffect","dbCommunication","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","indexOf","toLocaleLowerCase","event","target","preventDefault","existing","find","window","confirm","returnedPerson","addedPerson","concat","catch","error","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cbe618d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return (\r\n    persons.map(person=>\r\n      <p key={person.id}>\r\n        {person.name} {person.number} \r\n        <button onClick={() => deletePerson(person.id)}>delete</button>\r\n      </p>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons","import React from \"react\"\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name:\r\n                <input value={props.newName} onChange={props.handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                number:\r\n                <input value = {props.newNumber} onChange = {props.handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type= \"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from \"react\"\r\n\r\nconst Notification = ({notification}) => {\r\n    if (notification === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={notification.type}>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n  return (\r\n    <input\r\n    value={props.value}\r\n    onChange={props.onChange}\r\n  />\r\n  )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport dbCommunication from './services/dbCommunication'\n\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([])\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ filterString, setStringFilter] = useState('')\n  const [ notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    dbCommunication.getAll()\n    .then(response => setPersons(response))\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterStringChange = (event) => {\n    setStringFilter(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name}`)\n    if (ok) {\n      dbCommunication.remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${toDelete.name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${toDelete.name} had already been removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existing = persons.find(p => p.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        dbCommunication.update(existing.id, {\n          name: existing.name,\n          number: newNumber\n        }).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : returnedPerson))\n          notifyWith(`Changed number of ${existing.name}`)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    } else {\n      dbCommunication.create({\n        name: newName,\n        number: newNumber\n      }).then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        notifyWith(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        notifyWith(`${error.response.data.error}`, 'error')\n      })\n    }\n  }\n\n  const personsToShow = filterString.length === 0 ?\n    persons :\n    persons.filter(p => p.name.toLowerCase().indexOf(filterString.toLocaleLowerCase()) > 0 )\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification notification={notification} />\n\n      Filter shown with:\n      <Filter \n        value={filterString} \n        onChange={handleFilterStringChange} \n      />\n\n      <h2> add new </h2>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n        addPerson={addPerson}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}